(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{477:function(t,s,e){t.exports=e.p+"assets/img/eslint_rulels.2c5c0245.jpg"},478:function(t,s,e){t.exports=e.p+"assets/img/test.31664274.png"},479:function(t,s,e){t.exports=e.p+"assets/img/node_glob.7f92aebb.png"},518:function(t,s,e){"use strict";e.r(s);var a=e(25),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"eslint-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-cli"}},[t._v("#")]),t._v(" ESlint CLI")]),t._v(" "),a("p",[t._v("通过yarn 或者 Npm 全局安装 ESlint工具")]),t._v(" "),a("blockquote",[a("p",[t._v("Npm:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g eslint\n")])])]),a("blockquote",[a("p",[t._v("yarn")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ yarn add eslint global\n")])])]),a("p",[t._v("使用ESlint CLI")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("eslint file1 file2....\n")])])]),a("p",[t._v("或:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('eslint dir/** or eslint "dir/**"\n')])])]),a("p",[t._v("Note:")]),t._v(" "),a("blockquote",[a("p",[t._v("这里的 **是node glob语法。")])]),t._v(" "),a("h2",{attrs:{id:"基本配置过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本配置过程"}},[t._v("#")]),t._v(" 基本配置过程")]),t._v(" "),a("p",[t._v("cli安装方式可选择本地也可以全局安装，如上讲述")]),t._v(" "),a("p",[t._v("安装好后，添加配置文件。运行如下命令会在项目中自动创建配置文件 .eslintrc[.js]")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ eslint --init \n")])])]),a("p",[t._v("Note: 一定运行nom init 初始化创建包描述文件，否则上述命令运行无任何效果，也不会创建eslint配置文件。")]),t._v(" "),a("p",[t._v("如果本地安装CLI，初始化则")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ ./node_modules/.bin/eslint --init\n")])])]),a("p",[t._v("Tips:")]),t._v(" "),a("blockquote",[a("p",[t._v("./node_modules/.bin 该目录是存放包中所需的命令行工具")])]),t._v(" "),a("h3",{attrs:{id:"rules-规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rules-规则"}},[t._v("#")]),t._v(" rules 规则")]),t._v(" "),a("blockquote",[a("p",[t._v('在配置文件中.eslint.js 中rules字段中指定规则，每一项规则都依照官方文档来进行添加配置，默认没想规则都是被禁用的。可以在配置中添加 extends": "eslint:recommended" 启动官方推荐的规则')])]),t._v(" "),a("p",[t._v("官方规则预览")]),t._v(" "),a("p",[a("img",{attrs:{src:e(477),alt:"rules"}})]),t._v(" "),a("p",[a("strong",[t._v("示列: 如下是在配置文件中，设置规则。")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"semi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制统一分号 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"quotes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\n\t规则解释：\n\tsemi: 该规则用来统一js代码中的分号，避免js 自动分号机制(ASI)有时候带来的歧义导致解析器崩掉。\n\toptions\n\t该规则配置有两个选项\n\t 对象\n\t  若为always\n\t  "omitLastInOneLineBlock": true 忽略花括号在同一行（内容也就在同一行了）的语句块中的\n最后一个分号\n\t\t若为 never\n      "beforeStatementContinuationChars": "any" (默认) 如果下一句以 [、(、/、+ 或 \t\t\t\t- 开头，忽略句末分号 (或缺少分号)。\n  \t\t"beforeStatementContinuationChars": "always" 如果下一句以 [、(、/、+ 或 - 开\t\t\t\t\t头，要求句末有分号。\n  \t\t"beforeStatementContinuationChars": "never" 如果下一句以 [、(、/、+ 或 - \t\t\t\t开头，禁止末尾有分号\n\t 字符串\n\t \t- always: 要求在语句末尾使用分号\n\t \t- never: 禁止在语句使用分号\n\t \n\t\t\n*/')]),t._v("\n")])])]),a("p",[t._v("每项规则级别 解释，即每一个规则第一个配置参数")]),t._v(" "),a("ul",[a("li",[a("code",[t._v('"off"')]),t._v(" or "),a("code",[t._v("0")]),t._v(" - 关闭规则")]),t._v(" "),a("li",[a("code",[t._v('"warn"')]),t._v(" or "),a("code",[t._v("1")]),t._v(" - 将规则视为一个警告（不会影响退出码）")]),t._v(" "),a("li",[a("code",[t._v('"error"')]),t._v(" or "),a("code",[t._v("2")]),t._v(" - 将规则视为一个错误 (退出码为1)")])]),t._v(" "),a("blockquote",[a("p",[t._v("Note: 这三个错误级别可以允许你细粒度的控制 ESLint 是如何应用规则， 只有在你的配置文件中扩展了一个可分享的配置或者明确开启一个规则，ESLint 才会去校验你的代码。")])]),t._v(" "),a("p",[t._v("配置插件下的规则:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("插件名/规则ID: 【规则设置】\n\ntips: 当指定来自插件的规则时，确保删除 eslint-plugin- 前缀。ESLint 在内部只使用没有前缀的名称去定位规则。\n")])])]),a("p",[a("strong",[t._v("或者内链注释设置规则.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内链注释禁用规则 no-var")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable no-var */")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable no-var */")]),t._v("\n")])])]),a("p",[a("strong",[t._v("禁用一组文件在配置文件中的规则")])]),t._v(" "),a("p",[t._v("实列:")]),t._v(" "),a("p",[t._v("如此目录结构:")]),t._v(" "),a("p",[a("img",{attrs:{src:e(478),alt:"test"}})]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"overrides"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*-test.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.spec.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-unused-expressions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实列:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"overrides"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*_rules.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-var"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定文件设置规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Note: 配置文件中注释内链注释行为.")]),t._v(" "),a("blockquote",[a("p",[t._v("配置文件中 添加 "),a("code",[t._v('"noInlineConfig": true')])]),t._v(" "),a("p",[t._v("报告使用eslint-disable注释行为的文件: "),a("code",[t._v('"reportUnusedDisableDirectives": true,"')])])]),t._v(" "),a("h2",{attrs:{id:"eslint-配置明细"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-配置明细"}},[t._v("#")]),t._v(" ESLInt 配置明细")]),t._v(" "),a("blockquote",[a("p",[t._v("eslint 完全可配置。可以只使用一个规则，或者运行基本语法验证。或者使用自定义规则和默认绑定的规则。")])]),t._v(" "),a("h3",{attrs:{id:"配置方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置方式"}},[t._v("#")]),t._v(" 配置方式:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Configuration Comments 使用javascript 注释把配置信息直接嵌入到一个代码源文件中。")])]),t._v(" "),a("li",[a("p",[t._v("使用配置文件 .eslintrc.js 或者在package.json的eslintConfig字段中配置，eslint会自动查找配置位置并读取应用配置。或者通过Eslint config*file指定配置文件")])])]),t._v(" "),a("h3",{attrs:{id:"使用配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用配置文件"}},[t._v("#")]),t._v(" 使用配置文件")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("直接使用配置文件, eslint进程运行会自动在lint文件所在目录向外查找配置，一直到根目录. 这种会合并配置.除非指定root")])]),t._v(" "),a("li",[a("p",[t._v("在命令行中传入 -c config*file    指定配置文件.")]),t._v(" "),a("p",[t._v("Note:")]),t._v(" "),a("blockquote",[a("p",[t._v("如果指定自定义配置文件的同时，需要禁用默认配置文件.eslint.* 需要 同时传入 --no-eslintrc参数.")])])])]),t._v(" "),a("h3",{attrs:{id:"配置级链和层次结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置级链和层次结构"}},[t._v("#")]),t._v(" 配置级链和层次结构")]),t._v(" "),a("p",[t._v("最佳实践: 只在项目根目录下设置配置文件 ，并在配置文件中设置 "),a("code",[t._v("root: ture")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果同一目录下 "),a("code",[t._v(".eslintrc")]),t._v(" 和 "),a("code",[t._v("package.json")]),t._v(" 同时存在，"),a("code",[t._v(".eslintrc")]),t._v(" 优先级高会被使用，"),a("code",[t._v("package.json")]),t._v(" 文件将不会被使用。")])]),t._v(" "),a("h3",{attrs:{id:"配置文件格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件格式"}},[t._v("#")]),t._v(" 配置文件格式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("javascript ,  官方文件格式定义 .eslintrc.js. 模块化到处一个配置信息对象。对于现在的框架来说通常都是模块整合了。所以通常是")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\trules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*规则*/")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("如果使用命令行手动是初始化配置可以选择 JSON格式配置，而不是模块化导出.")])]),t._v(" "),a("li",[a("p",[t._v(".yaml 使用.eslintrc.yaml 或 .eslint.yml定义配置文件")])]),t._v(" "),a("li",[a("p",[t._v("JSON格式 使用 .eslintrc.json格式配置。")])]),t._v(" "),a("li",[a("p",[t._v("在package.json文件 eslintConfig字段指定配置")])]),t._v(" "),a("li",[a("p",[t._v(".eslintrc格式，已废弃")])])]),t._v(" "),a("p",[t._v("完整的配置层次结构，从最高优先级最低的优先级，如下:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("行内配置")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("/*eslint-disable*/")]),t._v(" 和 "),a("code",[t._v("/*eslint-enable*/")])]),t._v(" "),a("li",[a("code",[t._v("/*global*/")])]),t._v(" "),a("li",[a("code",[t._v("/*eslint*/")])]),t._v(" "),a("li",[a("code",[t._v("/*eslint-env*/")])])])]),t._v(" "),a("li",[a("p",[t._v("命令行选项（或 CLIEngine 等价物）：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("--global")])]),t._v(" "),a("li",[a("code",[t._v("--rule")])]),t._v(" "),a("li",[a("code",[t._v("--env")])]),t._v(" "),a("li",[a("code",[t._v("-c")]),t._v("、"),a("code",[t._v("--config")])])])]),t._v(" "),a("li",[a("p",[t._v("项目级配置：")]),t._v(" "),a("ol",[a("li",[t._v("与要检测的文件在同一目录下的 "),a("code",[t._v(".eslintrc.*")]),t._v(" 或 "),a("code",[t._v("package.json")]),t._v(" 文件")]),t._v(" "),a("li",[t._v("继续在父级目录寻找 "),a("code",[t._v(".eslintrc")]),t._v(" 或 "),a("code",[t._v("package.json")]),t._v("文件，直到根目录（包括根目录）或直到发现一个有"),a("code",[t._v('"root": true')]),t._v("的配置。")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果同一目录中有多个配置文件。使用配置优先级规则是")]),t._v(" "),a("ol",[a("li",[t._v(".eslintrc.js")]),t._v(" "),a("li",[t._v(".eslintrc.yaml")]),t._v(" "),a("li",[t._v(".eslintrc.yml")]),t._v(" "),a("li",[t._v(".eslintrc.json")]),t._v(" "),a("li",[t._v("package.json")])])])]),t._v(" "),a("li",[a("p",[t._v("如果不是（1）到（3）中的任何一种情况，退回到 "),a("code",[t._v("~/.eslintrc")]),t._v(" 中自定义的默认配置。")])])]),t._v(" "),a("h3",{attrs:{id:"配置文件字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件字段"}},[t._v("#")]),t._v(" 配置文件字段")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Environments")]),t._v(" - 指定脚本的运行环境。每种环境都有一组特定的预定义全局变量。在脚本文件中 表示为 'env'字段")]),t._v(" "),a("p",[t._v("可用环境")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("browser")]),t._v(" - 浏览器环境中的全局变量。")]),t._v(" "),a("li",[a("code",[t._v("node")]),t._v(" - Node.js 全局变量和 Node.js 作用域。")]),t._v(" "),a("li",[a("code",[t._v("commonjs")]),t._v(" - CommonJS 全局变量和 CommonJS 作用域 (用于 Browserify/WebPack 打包的只在浏览器中运行的代码)。")]),t._v(" "),a("li",[a("code",[t._v("shared-node-browser")]),t._v(" - Node.js 和 Browser 通用全局变量。")]),t._v(" "),a("li",[a("code",[t._v("es6")]),t._v(" - 启用除了 modules 以外的所有 ECMAScript 6 特性（该选项会自动设置 "),a("code",[t._v("ecmaVersion")]),t._v(" 解析器选项为 6）。")]),t._v(" "),a("li",[a("code",[t._v("worker")]),t._v(" - Web Workers 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("amd")]),t._v(" - 将 "),a("code",[t._v("require()")]),t._v(" 和 "),a("code",[t._v("define()")]),t._v(" 定义为像 "),a("a",{attrs:{href:"https://github.com/amdjs/amdjs-api/wiki/AMD",target:"_blank",rel:"noopener noreferrer"}},[t._v("amd"),a("OutboundLink")],1),t._v(" 一样的全局变量。")]),t._v(" "),a("li",[a("code",[t._v("mocha")]),t._v(" - 添加所有的 Mocha 测试全局变量。")]),t._v(" "),a("li",[a("code",[t._v("jasmine")]),t._v(" - 添加所有的 Jasmine 版本 1.3 和 2.0 的测试全局变量。")]),t._v(" "),a("li",[a("code",[t._v("jest")]),t._v(" - Jest 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("phantomjs")]),t._v(" - PhantomJS 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("protractor")]),t._v(" - Protractor 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("qunit")]),t._v(" - QUnit 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("jquery")]),t._v(" - jQuery 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("prototypejs")]),t._v(" - Prototype.js 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("shelljs")]),t._v(" - ShellJS 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("meteor")]),t._v(" - Meteor 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("mongo")]),t._v(" - MongoDB 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("applescript")]),t._v(" - AppleScript 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("nashorn")]),t._v(" - Java 8 Nashorn 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("serviceworker")]),t._v(" - Service Worker 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("atomtest")]),t._v(" - Atom 测试全局变量。")]),t._v(" "),a("li",[a("code",[t._v("embertest")]),t._v(" - Ember 测试全局变量。")]),t._v(" "),a("li",[a("code",[t._v("webextensions")]),t._v(" - WebExtensions 全局变量。")]),t._v(" "),a("li",[a("code",[t._v("greasemonkey")]),t._v(" - GreaseMonkey 全局变量。")])]),t._v(" "),a("p",[t._v("特定插件的环境")]),t._v(" "),a("ul",[a("li",[t._v("首先是安装插件")]),t._v(" "),a("li",[t._v("在plugins配置插件")]),t._v(" "),a("li",[t._v("在env字段中配置 以不带前缀的 插件名/环境名 设置")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example/custom"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Globals")]),t._v(" - 脚本在执行期间访问的额外的全局变量。")]),t._v(" "),a("blockquote",[a("p",[t._v("在globals字段中指定额外全局变量， 如果未指定，lint检查不会通过，直接未定义处理。")])]),t._v(" "),a("p",[t._v("测试:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过注释")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在源代码中，通过注释配置全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*globals $: readonly, window: writable*/")]),t._v("\nwindow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置文件, 截取部分配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"globals"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"readonly"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"writable"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("Note:")]),t._v(" "),a("blockquote",[a("p",[t._v("由于历史原因，布尔值 "),a("code",[t._v("false")]),t._v(" 和字符串值 "),a("code",[t._v('"readable"')]),t._v(" 等价于 "),a("code",[t._v('"readonly"')]),t._v("。类似地，布尔值 "),a("code",[t._v("true")]),t._v(" 和字符串值 "),a("code",[t._v('"writeable"')]),t._v(" 等价于 "),a("code",[t._v('"writable"')]),t._v("。但是，不建议使用旧值。要启用"),a("a",{attrs:{href:"https://eslint.bootcss.com/docs/rules/no-global-assign",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-global-assign"),a("OutboundLink")],1),t._v("规则来禁止对只读的全局变量进行修改。默认推荐 已经启用")])]),t._v(" "),a("p",[t._v("可以在源文件里、在配置文件中或使用 "),a("a",{attrs:{href:"https://eslint.bootcss.com/docs/user-guide/command-line-interface",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令行"),a("OutboundLink")],1),t._v(" 的 "),a("code",[t._v("--env")]),t._v(" 选项来指定环境。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Rules")]),t._v(" - 启用的规则及其各自的错误级别。脚本文件中表示字段为 'rules'")])]),t._v(" "),a("li",[a("p",[t._v("parserOtions(js语言解析器)")]),t._v(" "),a("blockquote",[a("p",[t._v("设置解析器选项能帮助 ESLint 确定什么是解析错误，所有语言选项默认都是 "),a("code",[t._v("false")]),t._v(".设置 javascript标准，默认情况，e slint只支持对ecma5语法校验。对于新的es标准或JSX需要覆盖设置")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意如果需要支持React 的JSX语法，需要使用 eslint-plugin-react插件。因为基础的eslint的jsx配置无法完全匹配react jsx语法。")]),t._v(" "),a("p",[t._v('启动对es6语法支持 { "parserOptions": { "ecmaVersion": 6 } }。如果需要启动对es6的全局变量支持还需要配置 { "env":{ "es6": true } }.，这个会自动启动对es6全局变量支持，如果单单启动第一项仅仅是支持es6语法')])]),t._v(" "),a("p",[t._v("该选项可用字段:")]),t._v(" "),a("ul",[a("li",[t._v("ecmaVersion: 设置 javascript版本，可以设置为数字,比如 es 5直接就是 ecmaVersion: 5, 以此类推； 或者以年份设值: 2015, 2016, 2017.....")]),t._v(" "),a("li",[t._v("sourceType: 设置 script 或者 module(如果是模块化则是 module值)")]),t._v(" "),a("li",[t._v("ecmaFeatures:\n"),a("ul",[a("li",[a("code",[t._v("globalReturn")]),t._v(" - 允许在全局作用域下使用 "),a("code",[t._v("return")]),t._v(" 语句")]),t._v(" "),a("li",[a("code",[t._v("impliedStrict")]),t._v(" - 启用全局 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode",target:"_blank",rel:"noopener noreferrer"}},[t._v("strict mode"),a("OutboundLink")],1),t._v(" (如果 "),a("code",[t._v("ecmaVersion")]),t._v(" 是 5 或更高)")]),t._v(" "),a("li",[a("code",[t._v("jsx")]),t._v(" - 启用 "),a("a",{attrs:{href:"http://facebook.github.io/jsx/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSX"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("code",[t._v("experimentalObjectRestSpread")]),t._v(" - 启用实验性的 "),a("a",{attrs:{href:"https://github.com/sebmarkbage/ecmascript-rest-spread",target:"_blank",rel:"noopener noreferrer"}},[t._v("object rest/spread properties"),a("OutboundLink")],1),t._v(" 支持。(**重要：**这是一个实验性的功能,在未来可能会有明显改变。 建议你写的规则 "),a("strong",[t._v("不要")]),t._v(" 依赖该功能，除非当它发生改变时你愿意承担维护成本。)")])])])])]),t._v(" "),a("li",[a("p",[t._v("Parser:")]),t._v(" "),a("blockquote",[a("p",[t._v("ESLint 默认使用"),a("a",{attrs:{href:"https://github.com/eslint/espree",target:"_blank",rel:"noopener noreferrer"}},[t._v("Espree"),a("OutboundLink")],1),t._v("作为其解析器，可以在配置文件中自定义解析器")])]),t._v(" "),a("p",[t._v("与eslint兼容解析器有")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/esprima",target:"_blank",rel:"noopener noreferrer"}},[t._v("Esprima"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/babel-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel-ESLint"),a("OutboundLink")],1),t._v(" - 一个对"),a("a",{attrs:{href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel"),a("OutboundLink")],1),t._v("解析器的包装，使其能够与 ESLint 兼容。如果要在代码中使用实验性js，使用该解析器能够进行代码校验.")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/@typescript-eslint/parser",target:"_blank",rel:"noopener noreferrer"}},[t._v("@typescript-eslint/parser"),a("OutboundLink")],1),t._v(" - 将 TypeScript 转换成与 estree 兼容的形式，以便在ESLint中使用。对ts语法格式规范。")])]),t._v(" "),a("p",[t._v("Note:在使用自定义解析器时，为了让 ESLint 在处理非 ECMAScript 5 特性时正常工作，配置属性 "),a("code",[t._v("parserOptions")]),t._v(" 是必须的。"),a("strong",[t._v("解析器会被传入 "),a("code",[t._v("parserOptions")]),t._v("，但是不一定会使用它们来决定功能特性的开关。")]),t._v(" 传入自定义解析器时候，结合配置 parserOptions,避免自定义解析器不能正常工作。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("processor")]),t._v("：")]),t._v(" "),a("blockquote",[a("p",[t._v("指定处理器，处理器可以从另一种文件中提取 JavaScript 代码，然后让 ESLint 检测 JavaScript 代码。或者处理器可以在预处理中转换 JavaScript 代码。 插件有提供处理器，可以在plugins键中指定插件的同时，设置处理器")]),t._v(" "),a("blockquote",[a("p",[t._v("设置格式为: 插件名/处理器名")])])]),t._v(" "),a("p",[t._v("如下")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 a-plugin插件中带有的处理器 a-processor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"processor"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin/a-processor"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("processor配合overrides, plugins指定文件类型，设置处理器。从非js文件类型中，提取j s代码，并检查js代码格式")]),t._v(" "),a("p",[t._v("比如")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"overrides"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.md"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"processor"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin/markdown"')]),t._v("\t\t\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("root")]),t._v(" "),a("blockquote",[a("p",[t._v("项目级目录级配置, 项目中需要对不同层级目录的代码code检查，就会出现多个配置文件。运行lint检查，会将配置文件合并，通常目录级配置优先级高。可以为配置文件设置 "),a("code",[t._v("root: true")]),t._v(" 作为根级别配置。这样lint运行就不会在向下合并。")])])]),t._v(" "),a("li",[a("p",[t._v("Plugins:")]),t._v(" "),a("blockquote",[a("p",[t._v("启用 三方插件，必须安装 （npm or yarn）, 在配置文件中配置插件，可以省略插件前缀。")])]),t._v(" "),a("p",[t._v("Note:")]),t._v(" "),a("blockquote",[a("p",[t._v("插件是相对于 ESLint 进程的当前工作目录解析的, 也就是相对于 项目中  node_moules目录解析插件位置")])]),t._v(" "),a("p",[t._v("测试：配置eslint-plugin-prettier")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/prettier/eslint-plugin-prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-prettier"),a("OutboundLink")],1),t._v(": 该插件辅助Eslint可以平滑地与Prettier一起协作，并将Prettier的解析作为Eslint的一部分，在最后的输出可以给出修改意见。这样当Prettier格式化代码的时候，依然能够遵循我们的Eslint规则。如果你禁用掉了所有和代码格式化相关的Eslint规则的话，该插件可以更好得工作。所以你可以使用eslint-config-prettier禁用掉所有的格式化相关的规则(如果其他有效的Eslint规则与prettier在代码如何格式化的问题上不一致的时候，报错是在所难免的了)")])]),t._v(" "),a("p",[t._v("​\t相关:")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/prettier/prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier"),a("OutboundLink")],1),t._v("：原始实现版本，定义了prettier规则并实现这些规则。支持的规则参考："),a("a",{attrs:{href:"https://prettier.io/docs/en/options.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/prettier/prettier-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier-eslint"),a("OutboundLink")],1),t._v("：输入代码，执行prettier后再eslint --fix输出格式化后的代码。仅支持字符串输入。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/prettier/prettier-eslint-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier-eslint-cli"),a("OutboundLink")],1),t._v("：顾名思义，支持CLI命令执行"),a("a",{attrs:{href:"https://github.com/prettier/prettier-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier-eslint"),a("OutboundLink")],1),t._v("的操作")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/prettier/eslint-config-prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-prettier"),a("OutboundLink")],1),t._v(": 将会禁用掉所有那些非必须或者和"),a("a",{attrs:{href:"https://github.com/prettier/prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier"),a("OutboundLink")],1),t._v("冲突的规则。这让您可以使用您最喜欢的shareable配置，而不让它的风格选择在使用Prettier时碍事。请注意该配置"),a("strong",[t._v("只是")]),t._v("将规则"),a("strong",[t._v("off")]),t._v("掉,所以它只有在和别的配置一起使用的时候才有意义。")])]),t._v(" "),a("li")]),t._v(" "),a("p",[a("strong",[t._v("prettier相关依赖关系解释:")])]),t._v(" "),a("p",[t._v("最基础的是prettier，然后你需要用eslint-config-prettier去禁用掉所有和prettier冲突的规则，这样才可以使用eslint-plugin-prettier去以符合eslint规则的方式格式化代码并提示对应的修改建议。为了让prettier和eslint结合起来，所以就诞生了prettier-eslint这个工具，但是它只支持输入代码字符串，不支持读取文件，因此又有了prettier-eslint-cli")]),t._v(" "),a("p",[t._v("配置： 测试")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 安装 插件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置插件, 拓展eslint框架能力")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置规则")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier/prettier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"extends扩展配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extends扩展配置文件"}},[t._v("#")]),t._v(" extends扩展配置文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("extends:\n")])])]),a("p",[t._v("​\t\t1. 指定配置的字符串(配置文件的路径、可共享配置的名称、"),a("code",[t._v("eslint:recommended")]),t._v(" 或 "),a("code",[t._v("eslint:all")]),t._v(")")]),t._v(" "),a("p",[t._v("​\t\t2. 字符串数组：每个配置继承它前面的配置")]),t._v(" "),a("p",[t._v("​\trules: 属性可以做下面的任何事情以扩展（或覆盖）规则：")]),t._v(" "),a("p",[t._v("​\t启用额外的规则")]),t._v(" "),a("p",[t._v("​\t改变继承的规则级别而不改变它的选项：")]),t._v(" "),a("p",[t._v("​\t\t基础配置："),a("code",[t._v('"eqeqeq": ["error", "allow-null"]')])]),t._v(" "),a("p",[t._v("​\t\t派生的配置："),a("code",[t._v('"eqeqeq": "warn"')])]),t._v(" "),a("p",[t._v("​\t\t最后生成的配置："),a("code",[t._v('"eqeqeq": ["warn", "allow-null"]')])]),t._v(" "),a("p",[t._v("​\t覆盖基础配置中的规则的选项")]),t._v(" "),a("p",[t._v("​\t\t基础配置："),a("code",[t._v('"quotes": ["error", "single", "avoid-escape"]')])]),t._v(" "),a("p",[t._v("​\t\t派生的配置："),a("code",[t._v('"quotes": ["error", "double"]')])]),t._v(" "),a("p",[t._v("​\t\t最后生成的配置："),a("code",[t._v('"quotes": ["error", "double"]')])]),t._v(" "),a("p",[t._v("rules规则扩展覆盖实践")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置规则")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-dupe-keys"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象声明中静止使用重复key")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-var"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier/prettier"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quotes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"single"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"avoid-escape"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 覆盖基础配置中的规则的选项")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quotes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h3",{attrs:{id:"可共享配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可共享配置"}},[t._v("#")]),t._v(" 可共享配置")]),t._v(" "),a("blockquote",[a("p",[t._v("即使用npm 平台发布的三方配置包. 使用是确保在当前项目安装。比如: eslint-config-airbnb, eslint-config-standard")])]),t._v(" "),a("p",[t._v("extends可以省略 包名前缀 eslint-config-")]),t._v(" "),a("p",[t._v("使用")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('extends:["standard"]\n')])])]),a("h3",{attrs:{id:"使用插件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用插件配置"}},[t._v("#")]),t._v(" 使用插件配置")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://eslint.bootcss.com/docs/developer-guide/working-with-plugins",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件"),a("OutboundLink")],1),t._v(" 是一个 npm 包，通常输出规则。一些插件也可以输出一个或多个命名的 "),a("a",{attrs:{href:"https://eslint.bootcss.com/docs/developer-guide/working-with-plugins#configs-in-plugins",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件配置输出"),a("OutboundLink")],1),t._v("。要确保这个包安装在 ESLint 能请求到的目录下。")])]),t._v(" "),a("p",[a("code",[t._v("plugins")]),t._v(" "),a("a",{attrs:{href:"https://eslint.bootcss.com/docs/user-guide/configuring#configuring-plugins",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性值"),a("OutboundLink")],1),t._v(" 可以省略包名的前缀 "),a("code",[t._v("eslint-plugin-")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("extends")]),t._v(" 属性值可以由以下组成：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("plugin:")])]),t._v(" "),a("li",[t._v("包名 (省略了前缀，比如，"),a("code",[t._v("react")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("/")])]),t._v(" "),a("li",[t._v("配置名称 (比如 "),a("code",[t._v("recommended")]),t._v(")")])]),t._v(" "),a("p",[t._v("从插件使用配置实践")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('....\n"plugins": [\n     "react"\n ],\n "extends": [\n     "eslint:recommended",\n     "plugin:react/recommended"\t// 这是插件输出的配置 plugin: 报名/输出配置名\n  ],\n ....\n')])])]),a("h3",{attrs:{id:"使用-eslant-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-eslant-all"}},[t._v("#")]),t._v(' 使用 "eslant: all"')]),t._v(" "),a("p",[a("code",[t._v("extends")]),t._v(" 属性值可以是 "),a("code",[t._v('"eslint:all"')]),t._v("，启用当前安装的 ESLint 中所有的核心规则。这些规则可以在 ESLint 的任何版本进行更改。")]),t._v(" "),a("p",[t._v("**重要：**这些配置 "),a("strong",[t._v("不推荐在产品中使用")]),t._v("，因为它随着 ESLint 版本进行更改。使用的话，请自己承担风险。")]),t._v(" "),a("p",[t._v("Tips: 如果你的配置扩展了所有的核心规则：在你升级到一个新的大或小的 ESLint 版本，在你使用"),a("a",{attrs:{href:"https://eslint.bootcss.com/docs/user-guide/command-line-interface#fix",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令行"),a("OutboundLink")],1),t._v("的 "),a("code",[t._v("--fix")]),t._v(" 选项之前，检查一下报告的问题，这样你就知道一个新的可修复的规则将更改代码。")]),t._v(" "),a("p",[t._v("官方配置(.json)实列")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint:all"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// override default options")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"comma-dangle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"indent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-cond-assign"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// disable now, but enable in the future")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"one-var"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["error", "never"]')]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// disable")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init-declarations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-console"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-inline-comments"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"基于glob模式的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于glob模式的配置"}},[t._v("#")]),t._v(" 基于glob模式的配置")]),t._v(" "),a("p",[t._v("应用规则:")]),t._v(" "),a("ul",[a("li",[t._v("Glob 模式覆盖只能在配置文件 ("),a("code",[t._v(".eslintrc.*")]),t._v(" 或 "),a("code",[t._v("package.json")]),t._v(") 中进行配置。")]),t._v(" "),a("li",[t._v("模式应用于相对于配置文件的目录的文件路径。 比如，如果你的配置文件的路径为 "),a("code",[t._v("/Users/john/workspace/any-project/.eslintrc.js")]),t._v(" 而你要检测的路径为 "),a("code",[t._v("/Users/john/workspace/any-project/lib/util.js")]),t._v("，那么你在 "),a("code",[t._v(".eslintrc.js")]),t._v(" 中提供的模式是相对于 "),a("code",[t._v("lib/util.js")]),t._v(" 来执行的.")]),t._v(" "),a("li",[t._v("在相同的配置文件中，Glob 模式覆盖比其他常规配置具有更高的优先级。 同一个配置中的多个覆盖将按顺序被应用。也就是说，配置文件中的最后一个覆盖会有最高优先级。")]),t._v(" "),a("li",[t._v("一个 glob 特定的配置几乎与 ESLint 的其他配置相同。覆盖块可以包含常规配置中的除了root之外的其他任何有效配置选项，\n"),a("ul",[a("li",[t._v("一个 glob 特定的配置可以有 "),a("code",[t._v("extends")]),t._v(" 设置，但是会忽略扩展配置中的 "),a("code",[t._v("root")]),t._v(" 属性。")]),t._v(" "),a("li",[t._v("只有当父配置和子配置的 glob 模式匹配时，才会应用嵌套的 "),a("code",[t._v("overrides")]),t._v(" 设置。当扩展配置具有 "),a("code",[t._v("overrides")]),t._v(" 设置时也是如此。")])])]),t._v(" "),a("li",[t._v("可以在单个覆盖块中提供多个 glob 模式。一个文件必须匹配至少一个配置中提供的模式。")]),t._v(" "),a("li",[t._v("覆盖块也可以指定从匹配中排除的模式。如果一个文件匹配了任何一个排除模式，该配置将不再被应用。")])]),t._v(" "),a("p",[t._v("实列:")]),t._v(" "),a("h3",{attrs:{id:"relative-glob-patterns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relative-glob-patterns"}},[t._v("#")]),t._v(" Relative glob patterns")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("project-root\n├── app\n│   ├── lib\n│   │   ├── foo.js\n│   │   ├── fooSpec.js\n│   ├── components\n│   │   ├── bar.js\n│   │   ├── barSpec.js\n│   ├── .eslintrc.json\n├── server\n│   ├── server.js\n│   ├── serverSpec.js\n├── .eslintrc.json\n")])])]),a("p",[t._v("配置 glob")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n  "rules": {\n    "quotes": ["error", "double"]\n  },\n\n  "overrides": [\t// 正对特定目录文件，细粒度配置lint规则\n    {\n      "files": ["bin/*.js", "lib/*.js"],\n      "excludedFiles": "*.test.js",\t//排除文件\n      "rules": {\n        "quotes": ["error", "single"]\n      }\n    }\n  ]\n}\n')])])]),a("p",[t._v("解释:")]),t._v(" "),a("blockquote",[a("p",[t._v("在 "),a("code",[t._v("app/.eslintrc.json")]),t._v(" 文件中的配置定义了 "),a("code",[t._v("**/*Spec.js")]),t._v(" glob 模式。该模式相对于 "),a("code",[t._v("app/.eslintrc.json")]),t._v(" 的基准目录。因此，该模式匹配 "),a("code",[t._v("app/lib/fooSpec.js")]),t._v(" 和 "),a("code",[t._v("app/components/barSpec.js")]),t._v("，但 "),a("strong",[t._v("不匹配")]),t._v(" "),a("code",[t._v("server/serverSpec.js")]),t._v("。如果你在项目根目录的 "),a("code",[t._v(".eslintrc.json")]),t._v(" 文件中定义相同的模式，它将匹配所有三个 "),a("code",[t._v("*Spec")]),t._v(" 文件。")])]),t._v(" "),a("h3",{attrs:{id:"配置文件使用注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件使用注释"}},[t._v("#")]),t._v(" 配置文件使用注释")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"browser"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Override our default settings just for this directory")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eqeqeq"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"strict"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"忽略检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略检测"}},[t._v("#")]),t._v(" 忽略检测")]),t._v(" "),a("blockquote",[a("p",[t._v("指定不需要被eslint检测的文件")])]),t._v(" "),a("ol",[a("li",[t._v("使用备用文件， .eslintignore")]),t._v(" "),a("li",[t._v("在package.json中指定eslintIgnore: [files....]")])]),t._v(" "),a("p",[t._v("附：")]),t._v(" "),a("p",[t._v("Node_glob")]),t._v(" "),a("p",[a("img",{attrs:{src:e(479),alt:"glob"}})]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://eslint.bootcss.com/docs/developer-guide/shareable-configs",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint_共享包配置"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://eslint.bootcss.com/docs/developer-guide/working-with-plugins#configs-in-plugins",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLiint_插件配置"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/guang_s/article/details/90379694",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node_glob模式"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/eslint/eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint_GitHub"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=n.exports}}]);