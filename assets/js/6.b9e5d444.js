(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{482:function(s,e,t){s.exports=t.p+"assets/img/14372881729_9eac0a7fa5_b.0f7333ff.jpg"},483:function(s,e,t){s.exports=t.p+"assets/img/action-name.469feea2.png"},484:function(s,e,t){s.exports=t.p+"assets/img/release-types.de301dc6.png"},485:function(s,e,t){s.exports=t.p+"assets/img/github_computer.70b91b86.png"},530:function(s,e,t){"use strict";t.r(e);var n=t(25),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("img",{attrs:{src:t(482),alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),n("p",[s._v("github actions同其他持续集成工具一样，trivas CI. actions也拥有 拉去代码，运行测试，登陆远程服务器共能，发布到第三方服务.")]),s._v(" "),n("p",[s._v("github actions的一次工作流是通过项目 .github/workflow目录下的 .yml格式文件来指定具体的工作流程的。在每次像远程交付代码时，后台就会检测此目录中的文件，来触发相应工作流程。")]),s._v(" "),n("h2",{attrs:{id:"workflow基本流程板块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workflow基本流程板块"}},[s._v("#")]),s._v(" workflow基本流程板块")]),s._v(" "),n("p",[s._v("（1）workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。")]),s._v(" "),n("p",[s._v("（2）job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。")]),s._v(" "),n("p",[s._v("（3）step（步骤）：每个 job 由多个 step 构成，一步步完成。")]),s._v(" "),n("p",[s._v("（4）action （动作）：每个 step 可以依次执行一个或多个命令（action）。")]),s._v(" "),n("h2",{attrs:{id:"语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),n("blockquote",[n("p",[s._v("由于workflow配置很多，只做基本配置介绍。此处以我的一个项目的workflow配置为列,。")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 我的博客项目自动化配置\nname: publish Blog\non:\n  push:\n    branches: \n      - master \njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2.3.1\n        with:\n          persist-credentials: false\n\n      - name: Install and Build \n        run: |\n          yarn\n          yarn build\n\n      - name: Deploy \n        uses: JamesIves/github-pages-deploy-action@3.5.9\n        with:\n          GITHUB_TOKEN: ${{ secrets.TOKEN }}\n          BRANCH: gh-pages \n          FOLDER: src/.vuepress/dist \n")])])]),n("ol",[n("li",[s._v("name")])]),s._v(" "),n("blockquote",[n("p",[s._v("表示一次workflow工作流的命名。")])]),s._v(" "),n("p",[s._v("具体结果可在github仓库主页的actions选项可查, 比如我的\n"),n("img",{attrs:{src:t(483),alt:"images"}})]),s._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[s._v("on")])]),s._v(" "),n("blockquote",[n("p",[s._v("workflow触发条件。可以是字符串，也可以是数组.")])]),s._v(" "),n("p",[s._v("配置方式\n(1) 单个事件\n如上我的项目中的workflow文件就是单个事件类型的配置, 而且指配置master分支作为触发条件")]),s._v(" "),n("p",[s._v("pull_request和 push两种事件类型，可以配置branch 和tag字段作为触发条件")]),s._v(" "),n("p",[s._v("比如")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("on:\n  push:\n    branches:    \n      - master\n      - 'mona/octocat'\n      - 'releases/**'\n    tags:        \n      - v1             \n      - v1.*          \n")])])]),n("p",[s._v("(2) 事件列表\n不需要精细配置每个webhook")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("on: [push, pull_request]\n")])])]),n("p",[s._v("(3) 事件列表且活动类型配置\n针对release事件类型，存在 published，unpublished，created，edited，deleted，或prereleasedd多种活动类型。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("on:\n  push:\n    branches:\n      - master\n  pull_request:\n    branches:\n      - master\n  page_build:\n  release:\n    types: # 该配置下存在活动类型配置\n      - created\n")])])]),n("p",[s._v("针对上述release事件类型,所拥有的活动类型\n"),n("img",{attrs:{src:t(484),alt:"img"}})]),s._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[s._v("jobs")])]),s._v(" "),n("blockquote",[n("p",[s._v("指定一次workflow需要完成的具体任务。")])]),s._v(" "),n("p",[s._v("jobs.<job_id>")]),s._v(" "),n("p",[s._v("可以指定一个或多个任务,任务对应 指定的job.id。每一个任务包括一个或多个steps.")]),s._v(" "),n("p",[s._v("jobs.<job_id>.name\n显示在GitHub上的作业名称。")]),s._v(" "),n("p",[s._v("jobs.<job_id>.needs\n默认情况下，作业并行运行。要顺序运行作业，可以使用jobs.<job_id>.needs关键字定义对其他作业的依赖关系。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("jobs:\n  job1:\n  job2:\n    needs: job1\n  job3:\n    needs: [job1, job2]\n")])])]),n("p",[s._v("jobs.<job_id>.runs-on\n指定作业运行的机器类型, 该机器可以是GitHub托管的运行程序，也可以是自托管的运行程序。"),n("strong",[s._v("必须在每个任务之前指定该字段")])]),s._v(" "),n("p",[s._v("如上，我的workflow就指定了github内置机型 "),n("code",[s._v("ubuntu-latest")])]),s._v(" "),n("p",[n("img",{attrs:{src:t(485),alt:"img"}})]),s._v(" "),n("p",[s._v("jobs.<job_id>.steps")]),s._v(" "),n("blockquote",[n("p",[s._v("设置一次任务完成，所涉及的步骤. 可以包括一个或多个steps。注意这玩意儿过度开销是会被官方监控的，收费。")])]),s._v(" "),n("p",[s._v("每一个步骤所包含流程")]),s._v(" "),n("ul",[n("li",[s._v("jobs.<job_id>.steps.name：步骤名称。")]),s._v(" "),n("li",[s._v("jobs.<job_id>.steps.run：该步骤运行的命令或者 action。")]),s._v(" "),n("li",[s._v("jobs.<job_id>.steps.env：该步骤所需的环境变量。")])]),s._v(" "),n("h2",{attrs:{id:"实战"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[s._v("#")]),s._v(" 实战")]),s._v(" "),n("p",[s._v("我的博客项目workflow, 使用github actions自动化没部署到github pages")]),s._v(" "),n("p",[s._v("流程:")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("在github开通blog的github repo. 我看网上很多教程在创建远程仓库的时候都是将 仓库名设置为 一个特殊仓库 如[你的github账号名称].github.io。个人实践完全不需要，不影响项目部署。 这个服务是官方提供，仓库的文件资源，最后都是官方检测资源依赖关系并生成站点的。")])]),s._v(" "),n("li",[n("p",[s._v("初始化完成后，还需要创建一个空分支，gh-pgs. 这是官方github pages服务部署的指定分支")])]),s._v(" "),n("li",[n("p",[s._v("设置个人开发令牌\n步骤: 个人github主页--\x3e 点击头像在菜单中选择 setting --\x3e 新切换页面中 点击 develper-setting --\x3e 新进页面中 点击 Personal access tokens -- 创建 一个新令牌即可。 最后在仓库中添加令牌")])]),s._v(" "),n("li",[n("p",[s._v("在仓库中创建一个空workflow文件，在pull到本地进行配置")])])]),s._v(" "),n("p",[s._v("完成配置，推送即可")]),s._v(" "),n("p",[s._v("我的blog项目workflow配置")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("name: publish Blog\non:\n  push:\n    branches: \n      - master \njobs:\n  build-and-deploy:\n    name: build_deploy\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2.3.1\n        with:\n          persist-credentials: false\n\n      - name: Install and Build \n        run: |\n          yarn\n          yarn build\n\n      - name: Deploy \n        uses: JamesIves/github-pages-deploy-action@3.5.9\n        with:\n          GITHUB_TOKEN: ${{ secrets.TOKEN }}\n          BRANCH: gh-pages \n          FOLDER: src/.vuepress/dist \n\n")])])]),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方Github Actions DOCS"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"结语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[s._v("#")]),s._v(" 结语")]),s._v(" "),n("p",[s._v("后期会更新其他持续集成工具，欢迎下方留言评论，谢谢")])])}),[],!1,null,null,null);e.default=a.exports}}]);